version: '3.8'

services:
  backend:
    build:
      dockerfile: ./backend.Dockerfile
    command: 
      python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./backend:/usr/src/app/
    ports:
      - 8000:8000
    env_file:
      - ./.env
    depends_on:
      - db
      - redis
  
  frontend:
    build:
      dockerfile: frontend.Dockerfile
    volumes:
      - './frontend:/app'
      - '/app/node_modules'
    ports:
      - 3001:3000
    environment:
      - CHOKIDAR_USEPOLLING=true
    
  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=${SQL_DATABASE}
      - POSTGRES_USER=${SQL_USER}
      - POSTGRES_PASSWORD=${SQL_PASSWORD}
    ports:
      - 5432:5432

  redis:
    image: redis:alpine

  celery:
    build:
      dockerfile: ./backend.Dockerfile
    command: celery -A PaperBetting worker -l info
    volumes:
      - ./backend:/usr/src/app/
    environment:
      - DEBUG=1
      - SECRET_KEY=${SECRET_KEY}
      - DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
    depends_on:
      - redis

  celery-beat:
    build:
      dockerfile: ./backend.Dockerfile
    command: celery -A PaperBetting beat -l info
    volumes:
      - ./backend:/usr/src/app/
    environment:
      - DEBUG=1
      - SECRET_KEY=${SECRET_KEY}
      - DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
    depends_on:
      - redis

volumes:
  postgres_data:
